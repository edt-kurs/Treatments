
#Область ПоискЦен

#Область МосковскаяБиржа

Функция МВВБАкции() Экспорт
	
	ДатаНачала = ТекущаяДата();
	СтруктураURI = СтруктураURI("https://iss.moex.com"); 
	ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL();
	HTTPСоединение = Новый HTTPСоединение(СтруктураURI.Хост, СтруктураURI.Порт,,,,15,ЗащищенноеСоединение);		
	
	Заголовки = Новый Соответствие;
	//Заголовки.Вставить("accept", "*/*");
	Заголовки.Вставить("content-type", "application/json");

	Если РусСША Тогда
		Путь = "/iss/engines/stock/markets/shares/boards/TQBR/securities.json";
	Иначе
		Путь = "/iss/engines/stock/markets/foreignshares/boards/FQBR/securities.json";
	КонецЕсли;
	
	
	HTTPЗапрос = Новый HTTPЗапрос(Путь, Заголовки);
	Результат = HTTPСоединение.Получить(HTTPЗапрос);
	СтрокаТела = Результат.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8);
	//ДанныеJSON = ОбработатьСтрокуJSON1(СтрокаТела);
	МассивДанных = JSON.Прочитать(СтрокаТела, Истина,);
	//Акции.Выгрузить(МассивДанных);
	Индекс = 0;
	Акции.Очистить();
	Для Каждого СтрокаТЗ Из МассивДанных["securities"]["data"] Цикл
		
		НоваяСтрока = Акции.Добавить();
		НоваяСтрока.Акция = СтрокаТЗ[9];
		НоваяСтрока.SECID = СтрокаТЗ[0];
		НоваяСтрока.BOARDID = СтрокаТЗ[1];
		НоваяСтрока.SHORTNAME = СтрокаТЗ[2];
		НоваяСтрока.PREVPRICE = СтрокаТЗ[3];
		НоваяСтрока.BOARDNAME = СтрокаТЗ[9];
		//НоваяСтрока.SECID = СтрокаТЗ[0];
		
		Индекс = Индекс + 1;
		
	КонецЦикла;
	Акции.Сортировать("Акция");
	//Возврат МассивДанных;
	
КонецФункции

Функция МВВБАкцииИндексы() Экспорт
	
	ДатаНачала = ТекущаяДата();
	СтруктураURI = СтруктураURI("https://iss.moex.com"); 
	ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL();
	HTTPСоединение = Новый HTTPСоединение(СтруктураURI.Хост, СтруктураURI.Порт,,,,15,ЗащищенноеСоединение);		
	
	Заголовки = Новый Соответствие;
	//Заголовки.Вставить("accept", "*/*");
	Заголовки.Вставить("content-type", "application/json");

	СписокАкции = Справочники.МВВБАкции.Выбрать();
	Пока СписокАкции.Следующий() Цикл
		
		//ПолучитьОбъект = Акции.Ссылка.ПолучитьОбъект();
		//Акции.Индексы.Очистить();
		//НовыйИндекс = ПолучитьОбъект.Индексы.Добавить();
		//НовыйИндекс.Индекс = Справочники.МВВБИндекс.НайтиПоНаименованию(SHORTNAME
		
	//СписокАкции.Следующий();
	
	Путь = СтрШаблон("iss/securities/%1/indices.json", СписокАкции.SECID);
	
	HTTPЗапрос = Новый HTTPЗапрос(Путь, Заголовки);
	Результат = HTTPСоединение.Получить(HTTPЗапрос);
	СтрокаТела = Результат.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8);
	//ДанныеJSON = ОбработатьСтрокуJSON1(СтрокаТела);
	МассивДанных = JSON.Прочитать(СтрокаТела, Истина,);
	//Акции.Выгрузить(МассивДанных);
	ПолучитьОбъект = СписокАкции.Ссылка.ПолучитьОбъект();
	ПолучитьОбъект.Индексы.Очистить();
	Для Каждого ИндексСтрока Из МассивДанных["indices"]["data"] Цикл
		
		НовыйИндекс = ПолучитьОбъект.Индексы.Добавить();
		ИндексСсылка = Справочники.МВВБИндекс.НайтиПоРеквизиту("indexid", ИндексСтрока[0]);
		Если Не ЗначениеЗаполнено(ИндексСсылка) Тогда
			
			НовыйИндексСпр = Справочники.МВВБИндекс.СоздатьЭлемент();
			НовыйИндексСпр.Наименование = ИндексСтрока[1];
			НовыйИндексСпр.indexid = ИндексСтрока[0];
			НовыйИндексСпр.shortname = ИндексСтрока[1];
			НовыйИндексСпр.FROM1 = ИндексСтрока[2];
			НовыйИндексСпр.TILL = ИндексСтрока[3];
			НовыйИндексСпр.Записать();
		
			ИндексСсылка = НовыйИндексСпр.Ссылка;
		КонецЕсли;
		
		НовыйИндекс.Индекс = ИндексСсылка;
		
	КонецЦикла;
	ПолучитьОбъект.Записать();
	КонецЦикла;
	
	//Возврат МассивДанных;
	
КонецФункции

Функция МВВБАкцииЦены() Экспорт
	
	ДатаНачала = ТекущаяДата();
	СтруктураURI = СтруктураURI("https://iss.moex.com"); 
	ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL();
	HTTPСоединение = Новый HTTPСоединение(СтруктураURI.Хост, СтруктураURI.Порт,,,,15,ЗащищенноеСоединение);		
	
	Заголовки = Новый Соответствие;
	//Заголовки.Вставить("accept", "*/*");
	Заголовки.Вставить("content-type", "application/json");
	Сообщить(ТекущаяДата());
	ДатаТек = ТекущаяДата();
	СписокАкции = Справочники.МВВБАкции.Выбрать();
	Пока СписокАкции.Следующий() Цикл
		
		//ПолучитьОбъект = Акции.Ссылка.ПолучитьОбъект();
		//Акции.Индексы.Очистить();
		//НовыйИндекс = ПолучитьОбъект.Индексы.Добавить();
		//НовыйИндекс.Индекс = Справочники.МВВБИндекс.НайтиПоНаименованию(SHORTNAME
		
	//СписокАкции.Следующий();
	//https://iss.moex.com/iss/engines/stock/markets/shares/boards/TQBR/securities/SBER/candles.json?interval=31&from=2020-09-19
	Если СписокАкции.BOARDID = "TQBR" Тогда
		Путь = СтрШаблон("iss/engines/stock/markets/shares/boards/TQBR/securities/%1/candles.json?interval=31&from=2020-09-19", СписокАкции.SECID);
	ИначеЕсли СписокАкции.BOARDID = "FQBR" Тогда
		Путь = СтрШаблон("iss/engines/stock/markets/foreignshares/boards/FQBR/securities/%1/candles.json?interval=31&from=2020-12-31", СписокАкции.SECID);
	Иначе
		Продолжить;
	КонецЕсли;
	
	HTTPЗапрос = Новый HTTPЗапрос(Путь, Заголовки);
	Результат = HTTPСоединение.Получить(HTTPЗапрос);
	СтрокаТела = Результат.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8);
	//ДанныеJSON = ОбработатьСтрокуJSON1(СтрокаТела);
	МассивДанных = JSON.Прочитать(СтрокаТела, Истина,);
	//Акции.Выгрузить(МассивДанных);
	
	ПолучитьОбъект = СписокАкции.Ссылка.ПолучитьОбъект();
	ПолучитьОбъект.Цены.Очистить();
	
		Для Каждого ИндексСтрока Из МассивДанных["candles"]["data"] Цикл
			
			НовыйИндекс = ПолучитьОбъект.Цены.Добавить();
			
			НовыйИндекс.open1	 = ИндексСтрока[0];
			НовыйИндекс.close1	 = ИндексСтрока[1];
			НовыйИндекс.high1	 = ИндексСтрока[2];
			НовыйИндекс.low1	 = ИндексСтрока[3];
			НовыйИндекс.value1	 = ИндексСтрока[4];
			НовыйИндекс.volume1	 = ИндексСтрока[5];
			НовыйИндекс.begin1	 = ОбработатьДату(ИндексСтрока[6]);
			НовыйИндекс.end1	 = ОбработатьДату(ИндексСтрока[7]);
			
		КонецЦикла;
	ПолучитьОбъект.Цена = НовыйИндекс.close1;
	ПолучитьОбъект.Записать();
	КонецЦикла;
	Сообщить(ДатаТек - ТекущаяДата());
	Сообщить(ТекущаяДата());
	//Возврат МассивДанных;
	
КонецФункции

Функция МВВБАкцииЦеныЗагрузкаЦен() Экспорт
	
	ДатаНачала = ТекущаяДата();
	СтруктураURI = СтруктураURI("https://iss.moex.com"); 
	ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL();
	HTTPСоединение = Новый HTTPСоединение(СтруктураURI.Хост, СтруктураURI.Порт,,,,15,ЗащищенноеСоединение);		
	
	Заголовки = Новый Соответствие;
	//Заголовки.Вставить("accept", "*/*");
	Заголовки.Вставить("content-type", "application/json");
	//Сообщить(ТекущаяДата());
	ДатаТек = ТекущаяДата();
	СписокАкции = Справочники.МВВБАкции.Выбрать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	МВВБАкции.Ссылка КАК Ссылка,
	               |	МВВБАкции.Акция КАК Акция,
	               |	МВВБАкции.SECID КАК SECID,
	               |	МВВБАкции.BOARDID КАК BOARDID
	               |ИЗ
	               |	Справочник.МВВБАкции КАК МВВБАкции
	               |ГДЕ
	               |	МВВБАкции.Акция.ПоказыватьВСтоимости = ИСТИНА";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		//ПолучитьОбъект = Акции.Ссылка.ПолучитьОбъект();
		//Акции.Индексы.Очистить();
		//НовыйИндекс = ПолучитьОбъект.Индексы.Добавить();
		//НовыйИндекс.Индекс = Справочники.МВВБИндекс.НайтиПоНаименованию(SHORTNAME
		
		//СписокАкции.Следующий();
		//https://iss.moex.com/iss/engines/stock/markets/shares/boards/TQBR/securities/SBER/candles.json?interval=31&from=2020-09-19
		ДатаЦены = Формат(ТекущаяДата()-60*60*24*20, "ДФ=yyyy-MM-dd");
		Если Выборка.BOARDID = "TQBR" Тогда
			Путь = СтрШаблон("iss/engines/stock/markets/shares/boards/%2/securities/%1/candles.json?interval=24&from=%3", Выборка.SECID, Выборка.BOARDID, ДатаЦены);
		ИначеЕсли Выборка.BOARDID = "FQBR" Тогда
			Путь = СтрШаблон("iss/engines/stock/markets/foreignshares/boards/FQBR/securities/%1/candles.json?interval=24&from=%3", Выборка.SECID, Выборка.BOARDID, ДатаЦены);
		Иначе
			Продолжить;
		КонецЕсли;
		
		//Путь = СтрШаблон("iss/engines/stock/markets/shares/boards/%2/securities/%1/candles.json?interval=24&from=%3", Выборка.SECID, Выборка.BOARDID, Формат(ТекущаяДата(), "ДФ=yyyy-MM-dd"));
		
		HTTPЗапрос = Новый HTTPЗапрос(Путь, Заголовки);
		Результат = HTTPСоединение.Получить(HTTPЗапрос);
		СтрокаТела = Результат.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8);
		//ДанныеJSON = ОбработатьСтрокуJSON1(СтрокаТела);
		МассивДанных = JSON.Прочитать(СтрокаТела, Истина);
		СоответствиеЦен = Новый Соответствие;
		КолСтрок = МассивДанных["candles"]["data"].Количество()-1;
		Если МассивДанных["candles"]["data"].Количество() > 0 Тогда
			СоответствиеЦен["Акция"] = Выборка.Акция;
			СоответствиеЦен["open"] = МассивДанных["candles"]["data"][КолСтрок][0];
			СоответствиеЦен["close"] = МассивДанных["candles"]["data"][КолСтрок][1];
			СоответствиеЦен["high"] = МассивДанных["candles"]["data"][КолСтрок][2];
			СоответствиеЦен["low"] = МассивДанных["candles"]["data"][КолСтрок][3];
			СоответствиеЦен["value"] = МассивДанных["candles"]["data"][КолСтрок][4];
			СоответствиеЦен["volume"] = МассивДанных["candles"]["data"][КолСтрок][5];
			СоответствиеЦен["begin"] = МассивДанных["candles"]["data"][КолСтрок][6];
			СоответствиеЦен["end"] = МассивДанных["candles"]["data"][КолСтрок][7];
			
			СоответствиеЦен["last"] = МассивДанных["candles"]["data"][КолСтрок][1];
			СоответствиеЦен["min"] = МассивДанных["candles"]["data"][КолСтрок][3];
			СоответствиеЦен["max"] = МассивДанных["candles"]["data"][КолСтрок][2];
			СоответствиеЦен["ask"] = МассивДанных["candles"]["data"][КолСтрок][1];
			СоответствиеЦен["bid"] = МассивДанных["candles"]["data"][КолСтрок][1];
			СоответствиеЦен["refreshTime"] = МассивДанных["candles"]["data"][КолСтрок][7];
			
			//Акции.Выгрузить(МассивДанных);
			РегистрыСведений.ЦеныАкцииНовый.Записать(СоответствиеЦен);
			Показатели.ОбновичтьПоказателиInvesting(Выборка.Акция, ПредопределенноеЗначение("ПланВидовХарактеристик.СвойствоАкции.ТекЦена"), СоответствиеЦен["ask"]);
			Показатели.ОбновичтьПоказателиInvesting(Выборка.Акция, ПредопределенноеЗначение("ПланВидовХарактеристик.СвойствоАкции.ЦенаМинЗаМесяц"), СоответствиеЦен["min"]);
			Показатели.ОбновичтьПоказателиInvesting(Выборка.Акция, ПредопределенноеЗначение("ПланВидовХарактеристик.СвойствоАкции.ЦенаМаксЗаМесяц"), СоответствиеЦен["max"]);
		КонецЕсли;
	КонецЦикла;
	
	// Обновим доллар
	
	Путь = СтрШаблон("iss/statistics/engines/currency/markets/fixing/USDFIXME.json?from=%1", ДатаЦены);
	HTTPЗапрос = Новый HTTPЗапрос(Путь, Заголовки);
	Результат = HTTPСоединение.Получить(HTTPЗапрос);
	СтрокаТела = Результат.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8);
	//ДанныеJSON = ОбработатьСтрокуJSON1(СтрокаТела);
	МассивДанных = JSON.Прочитать(СтрокаТела, Истина);
	
	//МассивДанных["history"]["data"][МассивДанных["history"]["data"].Количество()-1][2]
	СоответствиеЦенДоллар = Новый Соответствие;
	МассивЦен = МассивДанных["history"]["data"];
	КолСтрок = МассивДанных["history"]["data"].Количество()-1;
	СоответствиеЦенДоллар["Акция"] = Справочники.Акции.НайтиПоНаименованию("USD/RUB");
	СоответствиеЦенДоллар["open"] = МассивЦен[КолСтрок][2];
	СоответствиеЦенДоллар["close"] =  МассивЦен[КолСтрок][2];
	//СоответствиеЦенДоллар["high"] =  МассивЦен[КолСтрок][2];
	//СоответствиеЦенДоллар["low"] =  МассивЦен[КолСтрок][2];
	//СоответствиеЦенДоллар["value"] =  МассивЦен[КолСтрок][2];
	//СоответствиеЦенДоллар["volume"] =  МассивЦен[КолСтрок][2];
	//СоответствиеЦенДоллар["begin"] =  МассивЦен[КолСтрок][2];
	СоответствиеЦенДоллар["end"] =  МассивЦен[КолСтрок][0];
	
	СоответствиеЦенДоллар["last"] =  МассивЦен[КолСтрок][2];
	СоответствиеЦенДоллар["min"] = МассивЦен[КолСтрок][2];
	СоответствиеЦенДоллар["max"] = МассивЦен[КолСтрок][2];
	СоответствиеЦенДоллар["ask"] =МассивЦен[КолСтрок][2];
	СоответствиеЦенДоллар["bid"] =МассивЦен[КолСтрок][2];
	СоответствиеЦенДоллар["refreshTime"] = МассивЦен[КолСтрок][0];
	РегистрыСведений.ЦеныАкцииНовый.Записать(СоответствиеЦенДоллар);
	//Сообщить(ДатаТек - ТекущаяДата());
	//Сообщить(ТекущаяДата());
	//Возврат МассивДанных;
	
КонецФункции
#КонецОбласти

#Область ВсеБиржи

Процедура investing() Экспорт
	
	Соединение = Новый HTTPСоединение("ru.investing.com",,"Evgen_g21@mail.ru","Zaq12wsx",,,
	        Новый ЗащищенноеСоединениеOpenSSL());
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Cookie"," ses_id=OXdmJ2RrPjZlIW1rMGE1NzBkNmQ%2FP2BjMTkwNjA0b3lidmNtZTI%2BeGJtaSdmZWJ%2BMmRkZzZhNjVlMzc%2BZmc0NTk9ZjNkMD5hZWFtNzA1NTMwYTY%2BPztgZTExMDEwYm80YmVjM2UwPj5iN2lkZmhibzIgZHg2cjYnZTc3Z2YnNHM5NmYnZDc%2BNGUxbWcwZjU2MGk2aT86YGAxOTA2MDJvd2Ip");
	Запрос = Новый HTTPЗапрос("/portfolio/",Заголовки);
	Результат = Соединение.Получить(Запрос);
	СтрокаТела = Результат.ПолучитьТелоКакСтроку();
	ДокументHTML = ПолучитьДокументHTML(СтрокаТела);
	
	АкцииЗапрос = Новый Запрос;
	АкцииЗапрос.Текст = "ВЫБРАТЬ
	                    |	Акции.Ссылка КАК Акция,
	                    |	Акции.ПоказыватьВСтоимости КАК ПоказыватьВСтоимости,
	                    |	Акции.ИДinvesting КАК ИДinvesting
	                    |ИЗ
	                    |	Справочник.Акции КАК Акции
	                    |ГДЕ
	                    |	Акции.ПоказыватьВСтоимости = ИСТИНА";
	
	Результат = АкцииЗапрос.Выполнить().Выгрузить();
	
	СписоЭлементовDOMЛ = ДокументHTML.ПолучитьЭлементыПоИмени("td");
	
	Для Каждого ТЗСтрока из Результат Цикл
		
		
		НоваяЗапись 			= РегистрыСведений.ЦеныАкции.СоздатьМенеджерЗаписи();
		НоваяЗапись.Период 		= ТекущаяДата();
		НоваяЗапись.Акции 		= ТЗСтрока.Акция;
		НоваяЗапись.Цена 		= ОбработкаЧислаКотировок(ДокументHTML.ПолучитьЭлементПоИдентификатору(ТЗСтрока.ИДinvesting).ТекстовоеСодержимое);
		НоваяЗапись.ПериодСтрока= ДокументHTML.ПолучитьЭлементПоИдентификатору(ТЗСтрока.ИДinvesting).ТекстовоеСодержимое;
		
		НоваяЗапись.Записать();
		
	КонецЦикла;
	
	//ТекВремя = ТекущаяДата();
	//КОнецВремся = ТекущаяДата();
	//ВремяПрохода = (КОнецВремся-ТекВремя);
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура finam() Экспорт
	
	//Соединение = Новый HTTPСоединение("https://www.finam.ru/quotes/",,,,,,
	//        Новый ЗащищенноеСоединениеOpenSSL());
	Путь = "https://www.finam.ru/quotes/";
	СтруктураURI = СтруктураURI(Путь); 
	//СтруктураURI = СтруктураURI("https://ru.investing.com/portfolio/?portfolioID=NzcxajVnM2s%2FbjkxMGo%3D");
	//HTTPЗапрос = Новый HTTPЗапрос("/api.php?action=direct&subno=" + НомерТелефонаДляПередачиВЗапрос);
	ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL();
	//Новый СертификатКлиентаWindows(СпособВыбораСертификатаWindows.Авто),
	//Новый СертификатыУдостоверяющихЦентровWindows());
	HTTPСоединение = Новый HTTPСоединение(СтруктураURI.Хост, СтруктураURI.Порт,"Evgen_g21@mail.ru","Eaq12wsx",,15,ЗащищенноеСоединение);		
	//HTTPСоединение = Новый HTTPСоединение("potoksms.ru", 443, , ,  ,  , ЗащищенноеСоединение);
	//HTTPОтвет = HTTPСоединение.Получить(HTTPЗапрос);
			
			
			
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Cookie","__utmz=1.1599846798.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); __utmc=1; segmentsUserId=42523370-0c37-5576-8235-5da75101699e; tmr_lvidTS=1526715732088; tmr_lvid=812d70f8ac8aefb105b38199846092f5; _gcl_au=1.1.1807873654.1599846799; segmentsData=puid1=; _ym_uid=1599846799868281884; _ym_d=1599846799; ASPSESSIONIDQSQSSTTD=PKNJJLCBJOGEAOJKKHFPOCNP; _fbp=fb.1.1599846800596.1189996311; _grf_vis=1; subscribeModal=cancelled; __utma=1.1540153371.1599846798.1599846798.1600453432.2; top100_id=t1.-1.546919147.1600453431718; _ym_visorc_10279138=w; ASPSESSIONIDSACCBBSC=DPHNDPDCCIOIGINNDJOCAAGN; refreshPage=5; _sm_udt=1600453370279; _sm_sid=983b0bc0-c990-422e-9144-8b24506ee60c; _sm_uid=59b26ee1-3039-460f-9cad-7ef5e52ce030; _ym_visorc_26812653=b; _ym_isad=2; ClientTimezoneOffset=420; NewsBeltSection=1; Reset=Reset; pushRefreshed=1; CWUserData=pwd=3fc9a732d99ed073918370c4c1de0c65&auto=1&id=757316&hash=d370f57644969f73d2183b4eef85da06&name=fn757316; LentaInformStorage=%7B%220%22%3A%7B%22svspr%22%3A%22https%3A%2F%2Fwww.finam.ru%2F%22%2C%22svsds%22%3A2%2C%22TejndEEDj%22%3A%22WOnFZ9jNJ%22%7D%2C%22C800160%22%3A%7B%22page%22%3A6%2C%22time%22%3A1600455213901%7D%7D; isChartVisible=false; __utmt=1; nid=sfa105; last_visit=1600431130640::1600456330640; __utmb=1.44.9.1600454957522; tmr_detect=0%7C1600456368264; displayResolution=mobile; tmr_reqNum=162");
	HTTPЗапрос = Новый HTTPЗапрос(СтруктураURI.ПутьНаСервере,Заголовки);;
	Результат = HTTPСоединение.Получить(HTTPЗапрос);
	СтрокаТела = Результат.ПолучитьТелоКакСтроку(КодировкаТекста.ANSI);
	ДокументHTML = ПолучитьДокументHTML(СтрокаТела);
	
	АкцииЗапрос = Новый Запрос;
	АкцииЗапрос.Текст = "ВЫБРАТЬ
	                    |	Акции.Ссылка КАК Акция,
	                    |	Акции.ПоказыватьВСтоимости КАК ПоказыватьВСтоимости,
	                    |	Акции.ИДinvesting КАК ИДinvesting,
	                    |	Акции.ИДfinam КАК ИДfinam
	                    |ИЗ
	                    |	Справочник.Акции КАК Акции
	                    |ГДЕ
	                    |	Акции.ПоказыватьВСтоимости = ИСТИНА";
	
	Результат = АкцииЗапрос.Выполнить().Выгрузить();
	
	СписоЭлементовDOMЛ = ДокументHTML.ПолучитьЭлементыПоИмени("td");
	Поиск = Истина;
	
	Для Каждого ТЗСтрока из Результат Цикл
	Индекс = -1;
		Для Каждого СтрокаЭлемент Из СписоЭлементовDOMЛ Цикл
		Индекс = Индекс +1;	
			Если ЗначениеЗаполнено(ТЗСтрока.ИДfinam) и Найти(СтрокаЭлемент.ТекстовоеСодержимое,ТЗСтрока.ИДfinam)>0 Тогда
				
				
				
				НоваяЗапись 				= РегистрыСведений.ЦеныАкции.СоздатьМенеджерЗаписи();
				НоваяЗапись.Период 			= ТекущаяДата();
				НоваяЗапись.Акции 			= ТЗСтрока.Акция;
				Если Не ЗначениеЗаполнено(НоваяЗапись.Акции.Курс) Тогда
					
					НоваяЗапись.Цена 			= ОбработкаЧислаКотировок(СписоЭлементовDOMЛ[Индекс+1].ТекстовоеСодержимое);
					
				Иначе
					
					ЦенаКурса = РегистрыСведений.ЦеныАкции.СрезПоследних(ТекущаяДата(),Новый Структура("Акции",НоваяЗапись.Акции.Курс)).Итог("Цена");
					Если ЦенаКурса>0 Тогда
						
						НоваяЗапись.Цена 			= ОбработкаЧислаКотировок(СписоЭлементовDOMЛ[Индекс+1].ТекстовоеСодержимое)*ЦенаКурса;
						
					Иначе
						
						НоваяЗапись.Цена 			= ОбработкаЧислаКотировок(СписоЭлементовDOMЛ[Индекс+1].ТекстовоеСодержимое);
						
					КонецЕсли;
					
				КонецЕсли;
				//НоваяЗапись.Цена 			= ОбработкаЧислаКотировок(СписоЭлементовDOMЛ[Индекс+1].ТекстовоеСодержимое);
				НоваяЗапись.Цена_открытия	= ОбработкаЧислаКотировок(СписоЭлементовDOMЛ[Индекс+3].ТекстовоеСодержимое);
				НоваяЗапись.Цена_макс 		= ОбработкаЧислаКотировок(СписоЭлементовDOMЛ[Индекс+4].ТекстовоеСодержимое);
				НоваяЗапись.Цена_мин 		= ОбработкаЧислаКотировок(СписоЭлементовDOMЛ[Индекс+5].ТекстовоеСодержимое);
				НоваяЗапись.Цена_закрытия 	= ОбработкаЧислаКотировок(СписоЭлементовDOMЛ[Индекс+6].ТекстовоеСодержимое);
				НоваяЗапись.ПериодСтрока	= СписоЭлементовDOMЛ[Индекс+8].ТекстовоеСодержимое;
				Попытка 
					ВремяЦены = ДобавитьМесяц(Дата(СписоЭлементовDOMЛ[Индекс+8].ТекстовоеСодержимое + ":00"),12*2000);
					
					Если (ТекущаяДата() - ВремяЦены) > 60 Тогда
						АкцияДляОб = АкцииДляОбновления.Добавить();
						АкцияДляОб.Акция = ТЗСтрока.Акция;
					КонецЕсли;
				Исключение
						
						АкцияДляОб = АкцииДляОбновления.Добавить();
						АкцияДляОб.Акция = ТЗСтрока.Акция;
						
				КонецПопытки; 
					
					
				//НоваяЗапись.Цена 		= ОбработкаЧислаКотировок(ДокументHTML.ПолучитьЭлементПоИдентификатору(ТЗСтрока.ИДinvesting).ТекстовоеСодержимое);
				//НоваяЗапись.ПериодСтрока= ДокументHTML.ПолучитьЭлементПоИдентификатору(ТЗСтрока.ИДinvesting).ТекстовоеСодержимое;
				Если НоваяЗапись.Цена>0 Тогда
					НоваяЗапись.Записать();
				Иначе
					Сообщить("Не удалось загрузить цены");
				КонецЕсли;
			Иначе
				АкцияДляОб = АкцииДляОбновления.Добавить();
				АкцияДляОб.Акция = ТЗСтрока.Акция;
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	АкцииДляОбновления.Свернуть("Акция");
	//ТекВремя = ТекущаяДата();
	//КОнецВремся = ТекущаяДата();
	//ВремяПрохода = (КОнецВремся-ТекВремя);
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура finamПоАкциям() Экспорт
	
	ДатаНачала = ТекущаяДата();
	//Соединение = Новый HTTPСоединение("https://www.finam.ru/quotes/",,,,,,
	//        Новый ЗащищенноеСоединениеOpenSSL());
	Путь = "https://www.finam.ru/quote/moex-akcii/";
	СтруктураURI = СтруктураURI(Путь); 
	//СтруктураURI = СтруктураURI("https://ru.investing.com/portfolio/?portfolioID=NzcxajVnM2s%2FbjkxMGo%3D");
	//HTTPЗапрос = Новый HTTPЗапрос("/api.php?action=direct&subno=" + НомерТелефонаДляПередачиВЗапрос);
	ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL();
	//Новый СертификатКлиентаWindows(СпособВыбораСертификатаWindows.Авто),
	//Новый СертификатыУдостоверяющихЦентровWindows());
	HTTPСоединение = Новый HTTPСоединение(СтруктураURI.Хост, СтруктураURI.Порт,,,,15,ЗащищенноеСоединение);		
	//HTTPСоединение = Новый HTTPСоединение("potoksms.ru", 443, , ,  ,  , ЗащищенноеСоединение);
	//HTTPОтвет = HTTPСоединение.Получить(HTTPЗапрос);
	ТаблицаЦен = Новый ТаблицаЗначений;
	ТаблицаЦен.Колонки.Добавить("Акции");
	ТаблицаЦен.Колонки.Добавить("Цена");
	ТаблицаЦен.Колонки.Добавить("Период");
	ТаблицаЦен.Колонки.Добавить("ПериодСтрока");
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Cookie","__utmz=1.1599846798.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); __utmc=1; segmentsUserId=42523370-0c37-5576-8235-5da75101699e; tmr_lvidTS=1526715732088; tmr_lvid=812d70f8ac8aefb105b38199846092f5; _gcl_au=1.1.1807873654.1599846799; segmentsData=puid1=; _ym_uid=1599846799868281884; _ym_d=1599846799; ASPSESSIONIDQSQSSTTD=PKNJJLCBJOGEAOJKKHFPOCNP; _fbp=fb.1.1599846800596.1189996311; _grf_vis=1; subscribeModal=cancelled; __utma=1.1540153371.1599846798.1599846798.1600453432.2; top100_id=t1.-1.546919147.1600453431718; _ym_visorc_10279138=w; ASPSESSIONIDSACCBBSC=DPHNDPDCCIOIGINNDJOCAAGN; refreshPage=5; _sm_udt=1600453370279; _sm_sid=983b0bc0-c990-422e-9144-8b24506ee60c; _sm_uid=59b26ee1-3039-460f-9cad-7ef5e52ce030; _ym_visorc_26812653=b; _ym_isad=2; ClientTimezoneOffset=420; NewsBeltSection=1; Reset=Reset; pushRefreshed=1; CWUserData=pwd=3fc9a732d99ed073918370c4c1de0c65&auto=1&id=757316&hash=d370f57644969f73d2183b4eef85da06&name=fn757316; LentaInformStorage=%7B%220%22%3A%7B%22svspr%22%3A%22https%3A%2F%2Fwww.finam.ru%2F%22%2C%22svsds%22%3A2%2C%22TejndEEDj%22%3A%22WOnFZ9jNJ%22%7D%2C%22C800160%22%3A%7B%22page%22%3A6%2C%22time%22%3A1600455213901%7D%7D; isChartVisible=false; __utmt=1; nid=sfa105; last_visit=1600431130640::1600456330640; __utmb=1.44.9.1600454957522; tmr_detect=0%7C1600456368264; displayResolution=mobile; tmr_reqNum=162");
	АкцииЗапрос = Новый Запрос;
	АкцииЗапрос.Текст = "ВЫБРАТЬ
	                    |	АкцииСпр.Ссылка КАК Акция,
	                    |	АкцииСпр.ПоказыватьВСтоимости КАК ПоказыватьВСтоимости,
	                    |	АкцииСпр.ИДfinamАкции КАК ИДfinamАкции
	                    |ИЗ
	                    |	Справочник.Акции КАК АкцииСпр
	                    |ГДЕ
	                    |	АкцииСпр.ПоказыватьВСтоимости = ИСТИНА
	                    |	И АкцииСпр.ИДfinamАкции <> """"";
	
	СписокАкций = АкцииЗапрос.Выполнить().Выгрузить();
	
	
	Для Каждого АкцияНаСайте ИЗ СписокАкций Цикл
		
		HTTPЗапрос = Новый HTTPЗапрос(СтруктураURI.ПутьНаСервере+АкцияНаСайте.ИДfinamАкции, Заголовки);
		Результат = HTTPСоединение.Получить(HTTPЗапрос);
		СтрокаТела = Результат.ПолучитьТелоКакСтроку(КодировкаТекста.ANSI);
		ДокументHTML = ПолучитьДокументHTML(СтрокаТела);
		
		Фильтр = Новый Структура;
		Фильтр.Вставить("type", "attribute");
		
		value = Новый Структура;
		value.Вставить("value", "data-json");
		value.Вставить("operation", "nameequals");
		
		Фильтр.Вставить("value", value);
		
		ФильтрJSON = JSON.Записать(Фильтр);
		МассивАтрибутов = ДокументHTML.НайтиПоФильтру(ФильтрJSON);
		Если Не ЗначениеЗаполнено(МассивАтрибутов) Тогда
			Прервать;
		КонецЕсли;
		
		ДанныеJSON = ОбработатьСтрокуJSON(МассивАтрибутов[0].Значение);
		
		МассивДанных = JSON.Прочитать(ДанныеJSON, Истина, "lastDealDate");
		quoteInfo = МассивДанных["quoteInfo"];
		
		НоваяСтрока = ТаблицаЦен.Добавить();
		НоваяСтрока.Акции = АкцияНаСайте.Акция;
		НоваяСтрока.Цена = quoteInfo["price"];
		НоваяСтрока.Период = quoteInfo["lastDealDate"];
		НоваяСтрока.ПериодСтрока = quoteInfo["lastDealDate"];
		
		//НоваяЗапись 				= РегистрыСведений.ЦеныАкции.СоздатьМенеджерЗаписи();
		//НоваяЗапись.Период 			= ТекущаяДата();
		//НоваяЗапись.Акции 			= АкцияНаСайте.Акция;
		//НоваяЗапись.Цена 			= quoteInfo["price"];
		//НоваяЗапись.ПериодСтрока	= Строка(quoteInfo["lastDealDate"]);
		//НоваяЗапись.Записать();
		
	КонецЦикла;
	
	ЦеныАкций.Загрузить(ТаблицаЦен);
	//НоваяЗапись = РегистрыСведений.ЦеныАкции.СоздатьНаборЗаписей();
	//НоваяЗапись.Отбор.УстановитьДоступныеПоля(
	//НоваяЗапись.Загрузить(ТаблицаЦен);
	//НоваяЗапись.Записать();
	Сообщить(ТекущаяДата() - ДатаНачала);
КонецПроцедуры

Процедура finamПоАкциямНовый() Экспорт
	
	ДатаНачала = ТекущаяДата();
	СтруктураURI = СтруктураURI("https://www.finam.ru"); 
	ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL();
	HTTPСоединение = Новый HTTPСоединение(СтруктураURI.Хост, СтруктураURI.Порт,,,,15,ЗащищенноеСоединение);		
	
	//ТаблицаЦен = Новый ТаблицаЗначений;
	//ТаблицаЦен.Колонки.Добавить("Акции");
	//ТаблицаЦен.Колонки.Добавить("last");
	//ТаблицаЦен.Колонки.Добавить("min");
	//ТаблицаЦен.Колонки.Добавить("bid");
	//ТаблицаЦен.Колонки.Добавить("ask");
	//ТаблицаЦен.Колонки.Добавить("max");
	//ТаблицаЦен.Колонки.Добавить("open");
	//ТаблицаЦен.Колонки.Добавить("refreshTime");
	//ТаблицаЦен.Колонки.Добавить("close");
	//ТаблицаЦен.Колонки.Добавить("close");
	//ТаблицаЦен.Колонки.Добавить("close");
	//ТаблицаЦен.Колонки.Добавить("ПериодСтрока");
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("accept", "*/*");
	Заголовки.Вставить("content-type", "application/json");
	
	АкцииЗапрос = Новый Запрос;
	АкцииЗапрос.Текст = "ВЫБРАТЬ
	                    |	АкцииСпр.Ссылка КАК Акция,
	                    |	АкцииСпр.ПоказыватьВСтоимости КАК ПоказыватьВСтоимости,
	                    |	АкцииСпр.ИДfinamАкции КАК ИДfinamАкции
	                    |ИЗ
	                    |	Справочник.Акции КАК АкцииСпр
	                    |ГДЕ
	                    |	АкцииСпр.ПоказыватьВСтоимости = ИСТИНА
	                    |	И АкцииСпр.ИДfinamАкции <> """"";
	
	СписокАкций = АкцииЗапрос.Выполнить().Выгрузить();
	
	НомерСтр = 1;
	Пока НомерСтр < 4 Цикл 
		
		Путь = СтрШаблон("api/quotesOnline?menuName=favorite&pageNumber=%1&userId=757316",НомерСтр);
		
		HTTPЗапрос = Новый HTTPЗапрос(Путь, Заголовки);
		Результат = HTTPСоединение.Получить(HTTPЗапрос);
		СтрокаТела = Результат.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8);
		ДанныеJSON = ОбработатьСтрокуJSON1(СтрокаТела);
		МассивДанных = JSON.Прочитать(ДанныеJSON, Истина,);
		
		Для Каждого ЭлементАкция Из МассивДанных["data"]["body"] Цикл
			
			ИмяАкции = ЭлементАкция["instrument"]["name"];
			Акция = Справочники.finam.НайтиПоНаименованию(ИмяАкции,Истина);
			Если Не ЗначениеЗаполнено(Акция) Тогда
				Акция = Справочники.finam.СоздатьЭлемент();
				Акция.Наименование = ИмяАкции;
				Акция.Записать();
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(Акция.Акция) Тогда
				Продолжить;
			КонецЕсли;
			
			//НоваяСтрока = ТаблицаЦен.Добавить();
			//НоваяСтрока.Акции		= ЭлементАкция["instrument"]["name"];
			//НоваяСтрока.last		= Число(ЭлементАкция["last"]);
			//НоваяСтрока.min			= Число(ЭлементАкция["min"]);
			//НоваяСтрока.bid			= Число(ЭлементАкция["bid"]);
			//НоваяСтрока.ask			= Число(ЭлементАкция["ask"]);
			//НоваяСтрока.max			= Число(ЭлементАкция["max"]);
			//НоваяСтрока.open		= Число(ЭлементАкция["open"]);
			//НоваяСтрока.close		= Число(ЭлементАкция["close"]);
			//НоваяСтрока.refreshTime = ЭлементАкция["refreshTime"];
			
			НоваяЗапись 				= РегистрыСведений.ЦеныАкцииНовый.СоздатьМенеджерЗаписи();
			НоваяЗапись.Период 			= ТекущаяДата();
			НоваяЗапись.Акции			= Акция.Акция;
			НоваяЗапись.ДатаОбновления	= ТекущаяДата();;
			НоваяЗапись.last			= Число(ЭлементАкция["last"]);
			НоваяЗапись.min				= Число(ЭлементАкция["min"]);
			Если ЗначениеЗаполнено(НоваяЗапись.bid) Тогда
				НоваяЗапись.bid				= Число(ЭлементАкция["bid"]);
			Иначе
				НоваяЗапись.bid				= Число(ЭлементАкция["last"]);
			КонецЕсли;
			Если ЗначениеЗаполнено(НоваяЗапись.ask) Тогда
				НоваяЗапись.ask				= Число(ЭлементАкция["ask"]);
			Иначе
				НоваяЗапись.ask				= Число(ЭлементАкция["last"]);
			КонецЕсли;
			//НоваяЗапись.bid				= Число(ЭлементАкция["bid"]);
			//НоваяЗапись.ask				= Число(ЭлементАкция["ask"]);
			НоваяЗапись.max				= Число(ЭлементАкция["max"]);
			НоваяЗапись.open			= Число(ЭлементАкция["open"]);
			НоваяЗапись.close			= Число(ЭлементАкция["close"]);
			НоваяЗапись.refreshTime 	= ЭлементАкция["refreshTime"];
			
			НоваяЗапись.Записать();
			РегистрыСведений.ПроцентДляСообщений.ЗаписатьТекСтатусПокупки(Акция.Акция);
		КонецЦикла;
		
		НомерСтр = НомерСтр + 1;
		
	КонецЦикла;
	
	//ЦеныАкций.Загрузить(ТаблицаЦен);
	//НоваяЗапись = РегистрыСведений.ЦеныАкцииНовый.СоздатьНаборЗаписей();
	//НоваяЗапись.Загрузить(ТаблицаЦен);
	//НоваяЗапись.Записать();
	
	//Сообщить(ТекущаяДата() - ДатаНачала);
КонецПроцедуры

Процедура МосковскаяБиржа() Экспорт
	
	ДатаНачала = ТекущаяДата();
	СтруктураURI = СтруктураURI("https://www.finam.ru"); 
	ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL();
	HTTPСоединение = Новый HTTPСоединение(СтруктураURI.Хост, СтруктураURI.Порт,,,,15,ЗащищенноеСоединение);		
	
	//ТаблицаЦен = Новый ТаблицаЗначений;
	//ТаблицаЦен.Колонки.Добавить("Акции");
	//ТаблицаЦен.Колонки.Добавить("last");
	//ТаблицаЦен.Колонки.Добавить("min");
	//ТаблицаЦен.Колонки.Добавить("bid");
	//ТаблицаЦен.Колонки.Добавить("ask");
	//ТаблицаЦен.Колонки.Добавить("max");
	//ТаблицаЦен.Колонки.Добавить("open");
	//ТаблицаЦен.Колонки.Добавить("refreshTime");
	//ТаблицаЦен.Колонки.Добавить("close");
	//ТаблицаЦен.Колонки.Добавить("close");
	//ТаблицаЦен.Колонки.Добавить("close");
	//ТаблицаЦен.Колонки.Добавить("ПериодСтрока");
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("accept", "*/*");
	Заголовки.Вставить("content-type", "application/json");
	
	АкцииЗапрос = Новый Запрос;
	АкцииЗапрос.Текст = "ВЫБРАТЬ
	                    |	АкцииСпр.Ссылка КАК Акция,
	                    |	АкцииСпр.ПоказыватьВСтоимости КАК ПоказыватьВСтоимости,
	                    |	АкцииСпр.ИДfinamАкции КАК ИДfinamАкции
	                    |ИЗ
	                    |	Справочник.Акции КАК АкцииСпр
	                    |ГДЕ
	                    |	АкцииСпр.ПоказыватьВСтоимости = ИСТИНА
	                    |	И АкцииСпр.ИДfinamАкции <> """"";
	
	СписокАкций = АкцииЗапрос.Выполнить().Выгрузить();
	
	НомерСтр = 1;
	Пока НомерСтр < 4 Цикл 
		
		Путь = СтрШаблон("api/quotesOnline?menuName=favorite&pageNumber=%1&userId=757316",НомерСтр);
		
		HTTPЗапрос = Новый HTTPЗапрос(Путь, Заголовки);
		Результат = HTTPСоединение.Получить(HTTPЗапрос);
		СтрокаТела = Результат.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8);
		ДанныеJSON = ОбработатьСтрокуJSON1(СтрокаТела);
		МассивДанных = JSON.Прочитать(ДанныеJSON, Истина,);
		
		Для Каждого ЭлементАкция Из МассивДанных["data"]["body"] Цикл
			
			ИмяАкции = ЭлементАкция["instrument"]["name"];
			Акция = Справочники.finam.НайтиПоНаименованию(ИмяАкции,Истина);
			Если Не ЗначениеЗаполнено(Акция) Тогда
				Акция = Справочники.finam.СоздатьЭлемент();
				Акция.Наименование = ИмяАкции;
				Акция.Записать();
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(Акция.Акция) Тогда
				Продолжить;
			КонецЕсли;
			
			//НоваяСтрока = ТаблицаЦен.Добавить();
			//НоваяСтрока.Акции		= ЭлементАкция["instrument"]["name"];
			//НоваяСтрока.last		= Число(ЭлементАкция["last"]);
			//НоваяСтрока.min			= Число(ЭлементАкция["min"]);
			//НоваяСтрока.bid			= Число(ЭлементАкция["bid"]);
			//НоваяСтрока.ask			= Число(ЭлементАкция["ask"]);
			//НоваяСтрока.max			= Число(ЭлементАкция["max"]);
			//НоваяСтрока.open		= Число(ЭлементАкция["open"]);
			//НоваяСтрока.close		= Число(ЭлементАкция["close"]);
			//НоваяСтрока.refreshTime = ЭлементАкция["refreshTime"];
			
			НоваяЗапись 				= РегистрыСведений.ЦеныАкцииНовый.СоздатьМенеджерЗаписи();
			НоваяЗапись.Период 			= ТекущаяДата();
			НоваяЗапись.Акции			= Акция.Акция;
			НоваяЗапись.ДатаОбновления	= ТекущаяДата();;
			НоваяЗапись.last			= Число(ЭлементАкция["last"]);
			НоваяЗапись.min				= Число(ЭлементАкция["min"]);
			НоваяЗапись.bid				= Число(ЭлементАкция["bid"]);
			НоваяЗапись.ask				= Число(ЭлементАкция["ask"]);
			НоваяЗапись.max				= Число(ЭлементАкция["max"]);
			НоваяЗапись.open			= Число(ЭлементАкция["open"]);
			НоваяЗапись.close			= Число(ЭлементАкция["close"]);
			НоваяЗапись.refreshTime 	= ЭлементАкция["refreshTime"];
			
			НоваяЗапись.Записать();
			
		КонецЦикла;
		
		НомерСтр = НомерСтр + 1;
		
	КонецЦикла;
	
	//ЦеныАкций.Загрузить(ТаблицаЦен);
	//НоваяЗапись = РегистрыСведений.ЦеныАкцииНовый.СоздатьНаборЗаписей();
	//НоваяЗапись.Загрузить(ТаблицаЦен);
	//НоваяЗапись.Записать();
	
	Сообщить(ТекущаяДата() - ДатаНачала);
КонецПроцедуры

Процедура finamОбновитьАкции(СписокАкций) Экспорт
	
	//Соединение = Новый HTTPСоединение("https://www.finam.ru/quotes/",,,,,,
	//        Новый ЗащищенноеСоединениеOpenSSL());
	Путь = "https://www.finam.ru/quote/moex-akcii/";
	СтруктураURI = СтруктураURI(Путь); 
	//СтруктураURI = СтруктураURI("https://ru.investing.com/portfolio/?portfolioID=NzcxajVnM2s%2FbjkxMGo%3D");
	//HTTPЗапрос = Новый HTTPЗапрос("/api.php?action=direct&subno=" + НомерТелефонаДляПередачиВЗапрос);
	ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL();
	//Новый СертификатКлиентаWindows(СпособВыбораСертификатаWindows.Авто),
	//Новый СертификатыУдостоверяющихЦентровWindows());
	HTTPСоединение = Новый HTTPСоединение(СтруктураURI.Хост, СтруктураURI.Порт,,,,15,ЗащищенноеСоединение);		
	//HTTPСоединение = Новый HTTPСоединение("potoksms.ru", 443, , ,  ,  , ЗащищенноеСоединение);
	//HTTPОтвет = HTTPСоединение.Получить(HTTPЗапрос);
			
	
			
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Cookie","__utmz=1.1599846798.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); __utmc=1; segmentsUserId=42523370-0c37-5576-8235-5da75101699e; tmr_lvidTS=1526715732088; tmr_lvid=812d70f8ac8aefb105b38199846092f5; _gcl_au=1.1.1807873654.1599846799; segmentsData=puid1=; _ym_uid=1599846799868281884; _ym_d=1599846799; ASPSESSIONIDQSQSSTTD=PKNJJLCBJOGEAOJKKHFPOCNP; _fbp=fb.1.1599846800596.1189996311; _grf_vis=1; subscribeModal=cancelled; __utma=1.1540153371.1599846798.1599846798.1600453432.2; top100_id=t1.-1.546919147.1600453431718; _ym_visorc_10279138=w; ASPSESSIONIDSACCBBSC=DPHNDPDCCIOIGINNDJOCAAGN; refreshPage=5; _sm_udt=1600453370279; _sm_sid=983b0bc0-c990-422e-9144-8b24506ee60c; _sm_uid=59b26ee1-3039-460f-9cad-7ef5e52ce030; _ym_visorc_26812653=b; _ym_isad=2; ClientTimezoneOffset=420; NewsBeltSection=1; Reset=Reset; pushRefreshed=1; CWUserData=pwd=3fc9a732d99ed073918370c4c1de0c65&auto=1&id=757316&hash=d370f57644969f73d2183b4eef85da06&name=fn757316; LentaInformStorage=%7B%220%22%3A%7B%22svspr%22%3A%22https%3A%2F%2Fwww.finam.ru%2F%22%2C%22svsds%22%3A2%2C%22TejndEEDj%22%3A%22WOnFZ9jNJ%22%7D%2C%22C800160%22%3A%7B%22page%22%3A6%2C%22time%22%3A1600455213901%7D%7D; isChartVisible=false; __utmt=1; nid=sfa105; last_visit=1600431130640::1600456330640; __utmb=1.44.9.1600454957522; tmr_detect=0%7C1600456368264; displayResolution=mobile; tmr_reqNum=162");
	Если Не ЗначениеЗаполнено(СписокАкций) Тогда
		АкцииЗапрос = Новый Запрос;
		АкцииЗапрос.Текст = "ВЫБРАТЬ
		                    |	АкцииСпр.Ссылка КАК Акция,
		                    |	АкцииСпр.ПоказыватьВСтоимости КАК ПоказыватьВСтоимости,
		                    |	АкцииСпр.ИДfinamАкции КАК ИДfinamАкции,
		                    |	ЦеныАкцииСрезПоследних.Акции КАК Акции,
		                    |	ЦеныАкцииСрезПоследних.Цена КАК Цена
		                    |ИЗ
		                    |	Справочник.Акции КАК АкцииСпр
		                    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныАкции.СрезПоследних КАК ЦеныАкцииСрезПоследних
		                    |		ПО ЦеныАкцииСрезПоследних.Акции = АкцииСпр.Ссылка
		                    |ГДЕ
		                    |	АкцииСпр.ПоказыватьВСтоимости = ИСТИНА
		                    |	И АкцииСпр.ИДfinamАкции <> """"";
		
		СписокАкцийВыгрузить = АкцииЗапрос.Выполнить().Выгрузить();
	КонецЕсли;
	
	Для Каждого АкцияНаСайте ИЗ СписокАкцийВыгрузить Цикл
		Попытка
			HTTPЗапрос = Новый HTTPЗапрос(СтруктураURI.ПутьНаСервере+АкцияНаСайте.Акция.ИДfinamАкции,Заголовки);;
			Результат = HTTPСоединение.Получить(HTTPЗапрос);
			СтрокаТела = Результат.ПолучитьТелоКакСтроку(КодировкаТекста.ANSI);
			ДокументHTML = ПолучитьДокументHTML(СтрокаТела);
			
		Исключение
			Продолжить;
			Сообщить(АкцияНаСайте.Акция);
		КонецПопытки;
	
	//	СписоЭлементовDOMЛ = ДокументHTML.ПолучитьЭлементыПоИмени("span");
		СписоЭлементовDOMЛ = ДокументHTML.ПолучитьЭлементыПоИмени("div");
		Поиск = Истина;
		
		Для Каждого ТЗСтрока из СписоЭлементовDOMЛ Цикл
			
			//Если ТЗСтрока.ИмяКласса = "PriceInformation__price--26G" Тогда
			Если ТЗСтрока.Идентификатор = "react_1" Тогда
				
				Для Каждого Атрибут Из ТЗСтрока.Атрибуты Цикл
					Если Атрибут.Имя = "data-json" Тогда
						//ТекстJSON 			= "[" + Атрибут.ТекстовоеСодержимое + "]";
						
						ТекстJSON1 = ОбработатьСтрокуJSON(Атрибут.ТекстовоеСодержимое);
						ДлинаСтроки = СтрДлина(ТекстJSON1);
						Сообщение = JSON.Прочитать(ТекстJSON1, Истина,"lastDealDate");
						ИнфаПоАкции = Сообщение["quoteInfo"];
						Цена = ИнфаПоАкции["price"];
						ВремяОбновления = ИнфаПоАкции["lastDealDate"];
						//Сообщить("Цена: " + Цена + Символы.ПС + "Время: " + ВремяОбновления);
						
						НоваяЗапись 				= РегистрыСведений.ЦеныАкции.СоздатьМенеджерЗаписи();
						НоваяЗапись.Период 			= ТекущаяДата();
						НоваяЗапись.Акции 			= АкцияНаСайте.Акция;
						НоваяЗапись.Цена 			= Цена;
						НоваяЗапись.ПериодСтрока = Строка(ВремяОбновления);
						НоваяЗапись.Записать();
					КонецЕсли;
				КонецЦикла;;
				
			КонецЕсли	
			
		//Индекс = -1;
		//	Для Каждого СтрокаЭлемент Из СписоЭлементовDOMЛ Цикл
		//	Индекс = Индекс +1;	
		//		Если ЗначениеЗаполнено(ТЗСтрока.ИДfinam) и Найти(СтрокаЭлемент.ТекстовоеСодержимое,ТЗСтрока.ИДfinam)>0 Тогда
		//			
		//			
		//			
					
		//			Если Не ЗначениеЗаполнено(НоваяЗапись.Акции.Курс) Тогда
		//				
		//				НоваяЗапись.Цена 			= ОбработкаЧислаКотировок(СписоЭлементовDOMЛ[Индекс+1].ТекстовоеСодержимое);
		//				
		//			Иначе
		////				
		//				ЦенаКурса = РегистрыСведений.ЦеныАкции.СрезПоследних(ТекущаяДата(),Новый Структура("Акции",НоваяЗапись.Акции.Курс)).Итог("Цена");
		//				Если ЦенаКурса>0 Тогда
		//					
		//					НоваяЗапись.Цена 			= ОбработкаЧислаКотировок(СписоЭлементовDOMЛ[Индекс+1].ТекстовоеСодержимое)*ЦенаКурса;
		//					
		//				Иначе
		//					
		//					НоваяЗапись.Цена 			= ОбработкаЧислаКотировок(СписоЭлементовDOMЛ[Индекс+1].ТекстовоеСодержимое);
		//					
		//				КонецЕсли;
		//				
		//			КонецЕсли;
		//			//НоваяЗапись.Цена 			= ОбработкаЧислаКотировок(СписоЭлементовDOMЛ[Индекс+1].ТекстовоеСодержимое);
		//			НоваяЗапись.Цена_открытия	= ОбработкаЧислаКотировок(СписоЭлементовDOMЛ[Индекс+3].ТекстовоеСодержимое);
		//			НоваяЗапись.Цена_макс 		= ОбработкаЧислаКотировок(СписоЭлементовDOMЛ[Индекс+4].ТекстовоеСодержимое);
		//			НоваяЗапись.Цена_мин 		= ОбработкаЧислаКотировок(СписоЭлементовDOMЛ[Индекс+5].ТекстовоеСодержимое);
		//			НоваяЗапись.Цена_закрытия 	= ОбработкаЧислаКотировок(СписоЭлементовDOMЛ[Индекс+1].ТекстовоеСодержимое);
		//			//
		//			//НоваяЗапись.Цена 		= ОбработкаЧислаКотировок(ДокументHTML.ПолучитьЭлементПоИдентификатору(ТЗСтрока.ИДinvesting).ТекстовоеСодержимое);
		//			//НоваяЗапись.ПериодСтрока= ДокументHTML.ПолучитьЭлементПоИдентификатору(ТЗСтрока.ИДinvesting).ТекстовоеСодержимое;
		//			Если НоваяЗапись.Цена>0 Тогда
		//				НоваяЗапись.Записать();
		//			Иначе
		//				Сообщить("Не удалось загрузить цены");
		//			КонецЕсли;
		//		КонецЕсли;
		//	КонецЕсли;
		КонецЦикла;
		//	
	КонецЦикла;
	
	//ТекВремя = ТекущаяДата();
	//КОнецВремся = ТекущаяДата();
	//ВремяПрохода = (КОнецВремся-ТекВремя);
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура Сбербанк() Экспорт
	
	ДатаНачала = ТекущаяДата();
	СтруктураURI = СтруктураURI("https://iss.moex.com"); 
	ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL();
	HTTPСоединение = Новый HTTPСоединение(СтруктураURI.Хост, СтруктураURI.Порт,,,,15,ЗащищенноеСоединение);		
	
	//ТаблицаЦен = Новый ТаблицаЗначений;
	//ТаблицаЦен.Колонки.Добавить("Акции");
	//ТаблицаЦен.Колонки.Добавить("last");
	//ТаблицаЦен.Колонки.Добавить("min");
	//ТаблицаЦен.Колонки.Добавить("bid");
	//ТаблицаЦен.Колонки.Добавить("ask");
	//ТаблицаЦен.Колонки.Добавить("max");
	//ТаблицаЦен.Колонки.Добавить("open");
	//ТаблицаЦен.Колонки.Добавить("refreshTime");
	//ТаблицаЦен.Колонки.Добавить("close");
	//ТаблицаЦен.Колонки.Добавить("close");
	//ТаблицаЦен.Колонки.Добавить("close");
	//ТаблицаЦен.Колонки.Добавить("ПериодСтрока");
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("accept", "*/*");
	Заголовки.Вставить("Origin", "https://www.sberbank.ru");
	Заголовки.Вставить("Referer", "https://www.sberbank.ru/");
	Заголовки.Вставить("Host", "iss.moex.com");
	Заголовки.Вставить("Connection", "keep-alive");
	//Заголовки.Вставить("Accept-Language", "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7");
	//Заголовки.Вставить("Accept-Encoding", "gzip, deflate, br");
//	Заголовки.Вставить("sec-ch-ua", "Google Chrome";v="93", " Not;A Brand";v="99", "Chromium";v="93"");
	//Заголовки.Вставить("accept", "*/*");
	//Заголовки.Вставить("accept", "*/*");
	//Заголовки.Вставить("accept", "*/*");
	//Заголовки.Вставить("accept", "*/*");
	//Заголовки.Вставить("content-type", "application/json");
	
	АкцииЗапрос = Новый Запрос;
	АкцииЗапрос.Текст = "ВЫБРАТЬ
	                    |	АкцииСпр.Ссылка КАК Акция,
	                    |	АкцииСпр.ПоказыватьВСтоимости КАК ПоказыватьВСтоимости,
	                    |	АкцииСпр.ИДfinamАкции КАК ИДfinamАкции
	                    |ИЗ
	                    |	Справочник.Акции КАК АкцииСпр
	                    |ГДЕ
	                    |	АкцииСпр.ПоказыватьВСтоимости = ИСТИНА
	                    |	И АкцииСпр.ИДfinamАкции <> """"";
	
	СписокАкций = АкцииЗапрос.Выполнить().Выгрузить();
	
	НомерСтр = 1;
	//Пока НомерСтр < 4 Цикл 
		
		//Путь = СтрШаблон("iss/engines/stock/markets/shares/boards/TQBR/securities/TCSG/candles.json?interval=24&iss.meta=off&candles.columns=open,close,begin,end&iss.reverse=true&from=2020-09-21");
		Путь = СтрШаблон("iss/engines/stock/markets/shares/boards/TQBR/securities.json");
		
		HTTPЗапрос = Новый HTTPЗапрос(Путь, Заголовки);
		Результат = HTTPСоединение.Получить(HTTPЗапрос);
		СтрокаТела = Результат.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8);
		ДанныеJSON = СтрокаТела;
		МассивДанных = JSON.Прочитать(ДанныеJSON, Истина,);
		
		Сообщить("Открытие:  " +МассивДанных["candles"]["data"][0][0]);
		Сообщить("Закрытие:  " + МассивДанных["candles"]["data"][0][1]);
		Сообщить("Начало:    " + МассивДанных["candles"]["data"][0][2]);
		Сообщить("Окончание: " + МассивДанных["candles"]["data"][0][3]);
		Сообщить("Текущее:   " + ТекущаяДата());
		//Для Каждого ЭлементАкция Из МассивДанных["data"]["body"] Цикл
		//	
		//	ИмяАкции = ЭлементАкция["instrument"]["name"];
		//	Акция = Справочники.finam.НайтиПоНаименованию(ИмяАкции,Истина);
		//	Если Не ЗначениеЗаполнено(Акция) Тогда
		//		Акция = Справочники.finam.СоздатьЭлемент();
		//		Акция.Наименование = ИмяАкции;
		//		Акция.Записать();
		//	КонецЕсли;
		//	
		//	Если Не ЗначениеЗаполнено(Акция.Акция) Тогда
		//		Продолжить;
		//	КонецЕсли;
		//	
		//	//НоваяСтрока = ТаблицаЦен.Добавить();
		//	//НоваяСтрока.Акции		= ЭлементАкция["instrument"]["name"];
		//	//НоваяСтрока.last		= Число(ЭлементАкция["last"]);
		//	//НоваяСтрока.min			= Число(ЭлементАкция["min"]);
		//	//НоваяСтрока.bid			= Число(ЭлементАкция["bid"]);
		//	//НоваяСтрока.ask			= Число(ЭлементАкция["ask"]);
		//	//НоваяСтрока.max			= Число(ЭлементАкция["max"]);
		//	//НоваяСтрока.open		= Число(ЭлементАкция["open"]);
		//	//НоваяСтрока.close		= Число(ЭлементАкция["close"]);
		//	//НоваяСтрока.refreshTime = ЭлементАкция["refreshTime"];
		//	
		//	//НоваяЗапись 				= РегистрыСведений.ЦеныАкцииНовый.СоздатьМенеджерЗаписи();
		//	//НоваяЗапись.Период 			= ТекущаяДата();
		//	//НоваяЗапись.Акции			= Акция.Акция;
		//	//НоваяЗапись.ДатаОбновления	= ТекущаяДата();;
		//	//НоваяЗапись.last			= Число(ЭлементАкция["last"]);
		//	//НоваяЗапись.min				= Число(ЭлементАкция["min"]);
		//	//НоваяЗапись.bid				= Число(ЭлементАкция["bid"]);
		//	//НоваяЗапись.ask				= Число(ЭлементАкция["ask"]);
		//	//НоваяЗапись.max				= Число(ЭлементАкция["max"]);
		//	//НоваяЗапись.open			= Число(ЭлементАкция["open"]);
		//	//НоваяЗапись.close			= Число(ЭлементАкция["close"]);
		//	//НоваяЗапись.refreshTime 	= ЭлементАкция["refreshTime"];
		//	//
		//	//НоваяЗапись.Записать();
		//	
		//КонецЦикла;
		
		НомерСтр = НомерСтр + 1;
		
	//КонецЦикла;
	
	//ЦеныАкций.Загрузить(ТаблицаЦен);
	//НоваяЗапись = РегистрыСведений.ЦеныАкцииНовый.СоздатьНаборЗаписей();
	//НоваяЗапись.Загрузить(ТаблицаЦен);
	//НоваяЗапись.Записать();
	
	//Сообщить(ТекущаяДата() - ДатаНачала);
КонецПроцедуры
#КонецОбласти







#КонецОбласти

#Область Вспомогательная

Функция ОбработатьСтрокуJSON1(СтрокаJSON)
	
	//НачалоСтроки = "{" + Прав(СтрокаJSON, СтрДлина(СтрокаJSON) - Найти(СтрокаJSON,"NeedCfdNote")+2);
	КонецСтроки = Лев(СтрокаJSON,Найти(СтрокаJSON,"NeedCfdNote") - 2 ) + "}}";
	
	Возврат КонецСтроки;
КонецФункции

Функция ОбработатьДату(СтроковаяДата)
	
	//СтроковаяДата = «2015-12-15 20:42:22»;
	СтроковаяДата = СтрЗаменить(СтроковаяДата , "-","");
	СтроковаяДата = СтрЗаменить(СтроковаяДата , ":","");
	СтроковаяДата = СтрЗаменить(СтроковаяДата , " ","");
	НоваяДата = Дата(СтроковаяДата);
	
	Возврат НоваяДата
	
КонецФункции

Функция СтруктураURI(Знач СтрокаURI) Экспорт
	
	СтрокаURI = СокрЛП(СтрокаURI);
	
	// схема
	Схема = "";
	Позиция = Найти(СтрокаURI, "://");
	Если Позиция > 0 Тогда
		Схема = НРег(Лев(СтрокаURI, Позиция - 1));
		СтрокаURI = Сред(СтрокаURI, Позиция + 3);
	КонецЕсли;

	// строка соединения и путь на сервере
	СтрокаСоединения = СтрокаURI;
	ПутьНаСервере = "";
	Позиция = Найти(СтрокаСоединения, "/");
	Если Позиция > 0 Тогда
		ПутьНаСервере = Сред(СтрокаСоединения, Позиция + 1);
		СтрокаСоединения = Лев(СтрокаСоединения, Позиция - 1);
	КонецЕсли;
		
	// информация пользователя и имя сервера
	СтрокаАвторизации = "";
	ИмяСервера = СтрокаСоединения;
	Позиция = Найти(СтрокаСоединения, "@");
	Если Позиция > 0 Тогда
		СтрокаАвторизации = Лев(СтрокаСоединения, Позиция - 1);
		ИмяСервера = Сред(СтрокаСоединения, Позиция + 1);
	КонецЕсли;
	
	// логин и пароль
	Логин = СтрокаАвторизации;
	Пароль = "";
	Позиция = Найти(СтрокаАвторизации, ":");
	Если Позиция > 0 Тогда
		Логин = Лев(СтрокаАвторизации, Позиция - 1);
		Пароль = Сред(СтрокаАвторизации, Позиция + 1);
	КонецЕсли;
	
	// хост и порт
	Хост = ИмяСервера;
	Порт = "";
	Позиция = Найти(ИмяСервера, ":");
	Если Позиция > 0 Тогда
		Хост = Лев(ИмяСервера, Позиция - 1);
		Порт = Сред(ИмяСервера, Позиция + 1);
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("Схема", Схема);
	Результат.Вставить("Логин", Логин);
	Результат.Вставить("Пароль", Пароль);
	Результат.Вставить("ИмяСервера", ИмяСервера);
	Результат.Вставить("Хост", Хост);
	Результат.Вставить("Порт", ?(Порт <> "", Число(Порт), Неопределено));
	Результат.Вставить("ПутьНаСервере", ПутьНаСервере);
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьДокументHTML(СтрокаHTML)
	
	ЧтениеHTML = Новый ЧтениеHTML;
	ЧтениеHTML.УстановитьСтроку(СтрокаHTML);
	
	ПостроительDOM = Новый ПостроительDOM;
	ДокументHTML = ПостроительDOM.Прочитать(ЧтениеHTML);
	ЧтениеHTML.Закрыть();
	
Возврат ДокументHTML;

 

КонецФункции

Функция ОбработатьСтрокуJSON(СтрокаJSON)
	
	НачалоСтроки = "{" + Прав(СтрокаJSON, СтрДлина(СтрокаJSON) - Найти(СтрокаJSON,"quoteInfo")+2);
	КонецСтроки = Лев(НачалоСтроки,Найти(НачалоСтроки,"favoriteStatus") + 15) +Символ(34)+Символ(34)+ "}}";
	
	Возврат КонецСтроки;
КонецФункции

Функция ОбработкаЧислаКотировок(Строка2)
	
	
	//	Строка2 = "5.400.500,00";
	МассивЧисел = Новый Массив; // сюда поместим все найденные числа. В данном примере в массив должно попасть 3 числа: 234224, 555 и 1
	СтрокаЧисел = "";
	Строка2 = СтрЗаменить(Строка2,".",",");
	Кол = СтрЧислоВхождений(Строка2,",");
	
	Пока Кол > 1 Цикл
		
		Строка2 = Строка(Сред(Строка2,1,Найти(Строка2,",")-1)) + Строка(Сред(Строка2,Найти(Строка2,",")+1));
		Кол = СтрЧислоВхождений(Строка2,",");
	КонецЦикла;
	
	Если Кол<>1 Тогда
		
		
		
	КонецЕсли;

	Для Индекс = 1 По СтрДлина(Строка2) Цикл
		Символ = Сред(Строка2, Индекс, 1); // Перебираем все сиволы из нашей строки
	//  Если КодСимвола(Символ) >= 48 И КодСимвола(Символ) <= 57 или Символ = "," или Символ = "." Тогда // Код нуля - 48, код 9-ки - 57
		Если КодСимвола(Символ) >= 48 И КодСимвола(Символ) <= 57 или Символ = "," Тогда // Код нуля - 48, код 9-ки - 57  
			СтрокаЧисел = СтрокаЧисел + Символ;
		ИначеЕсли СтрДлина(СтрокаЧисел) > 0 Тогда
			МассивЧисел.Добавить(Число(СтрокаЧисел));
		КонецЕсли;
	КонецЦикла;

	
	Возврат Число(СтрокаЧисел);
	
КонецФункции

#КонецОбласти